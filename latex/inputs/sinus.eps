%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: vrijdag 21 september 2018 11.50 u. CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
14.0000 179.438 367.978 31.1234 rc
0.470588 0 0.0549020 RG
newpath
15.0000 195.500 m
16.9189 193.647 l
18.5885 192.060 l
20.4662 190.331 l
22.3563 188.677 l
24.2375 187.146 l
25.9815 185.851 l
27.7874 184.657 l
29.6550 183.598 l
31.5167 182.738 l
33.4316 182.072 l
35.1183 181.679 l
36.0677 181.539 l
37.0171 181.459 l
37.2554 181.448 l
37.4937 181.441 l
37.7321 181.438 l
37.9704 181.439 l
38.2087 181.443 l
38.4470 181.451 l
38.6853 181.463 l
38.9237 181.479 l
39.8424 181.575 l
40.7610 181.727 l
42.4295 182.143 l
44.4135 182.866 l
46.0942 183.664 l
48.0493 184.790 l
49.7799 185.949 l
51.6786 187.376 l
53.4866 188.865 l
55.3731 190.527 l
57.1054 192.127 l
58.9740 193.907 l
60.9150 195.783 l
62.6046 197.413 l
64.4294 199.144 l
66.3146 200.871 l
68.1589 202.474 l
69.9434 203.918 l
71.9247 205.372 l
73.7050 206.522 l
75.6059 207.568 l
77.3284 208.337 l
79.2115 208.971 l
80.9834 209.362 l
81.9095 209.484 l
82.8355 209.549 l
83.0619 209.557 l
83.2882 209.561 l
83.5146 209.561 l
83.7409 209.558 l
84.1936 209.542 l
84.6463 209.512 l
85.5942 209.406 l
86.5420 209.240 l
88.3678 208.757 l
90.2350 208.047 l
92.0867 207.138 l
93.7882 206.136 l
95.7383 204.808 l
97.4825 203.478 l
99.3422 201.934 l
101.122 200.357 l
103.098 198.522 l
104.810 196.886 l
106.752 195.008 l
108.523 193.302 l
110.459 191.475 l
112.130 189.955 l
114.033 188.314 l
115.871 186.846 l
117.708 185.517 l
119.538 184.351 l
121.296 183.398 l
123.197 182.566 l
125.009 181.980 l
125.962 181.756 l
126.915 181.590 l
127.347 181.535 l
127.778 181.492 l
128.209 181.462 l
128.641 181.443 l
128.879 181.439 l
129.118 181.438 l
129.356 181.441 l
129.595 181.447 l
130.072 181.472 l
130.548 181.512 l
131.462 181.630 l
132.375 181.804 l
134.198 182.310 l
136.101 183.061 l
137.855 183.941 l
139.650 185.017 l
141.633 186.390 l
143.428 187.781 l
145.264 189.324 l
147.131 190.995 l
148.847 192.597 l
150.676 194.348 l
152.492 196.105 l
154.433 197.972 l
156.147 199.585 l
158.124 201.373 l
159.908 202.895 l
161.674 204.290 l
163.572 205.646 l
165.478 206.833 l
167.213 207.744 l
169.054 208.520 l
170.852 209.076 l
171.826 209.291 l
172.800 209.444 l
173.221 209.491 l
173.643 209.526 l
174.064 209.549 l
174.486 209.560 l
174.728 209.561 l
174.970 209.559 l
175.212 209.552 l
175.454 209.541 l
175.938 209.508 l
176.422 209.460 l
177.332 209.327 l
178.242 209.140 l
180.045 208.612 l
181.849 207.881 l
183.689 206.940 l
185.639 205.742 l
187.427 204.481 l
189.193 203.103 l
191.080 201.506 l
192.962 199.812 l
194.653 198.229 l
196.654 196.307 l
198.330 194.686 l
200.289 192.805 l
202.159 191.055 l
203.828 189.554 l
205.706 187.961 l
207.596 186.484 l
209.477 185.165 l
211.222 184.097 l
213.027 183.165 l
214.895 182.400 l
216.757 181.854 l
217.714 181.660 l
218.672 181.526 l
219.093 181.486 l
219.515 181.458 l
219.726 181.449 l
219.937 181.442 l
220.147 181.438 l
220.358 181.438 l
220.596 181.441 l
220.833 181.447 l
221.070 181.457 l
221.308 181.472 l
221.782 181.511 l
222.257 181.565 l
223.210 181.719 l
224.164 181.932 l
226.001 182.507 l
227.670 183.210 l
229.654 184.255 l
231.334 185.305 l
233.289 186.698 l
235.020 188.064 l
236.919 189.683 l
238.727 191.318 l
240.613 193.092 l
242.345 194.758 l
244.214 196.566 l
246.155 198.425 l
247.845 200.002 l
249.669 201.636 l
251.555 203.222 l
253.399 204.649 l
255.183 205.889 l
257.165 207.081 l
258.945 207.969 l
260.846 208.711 l
262.568 209.188 l
263.510 209.368 l
264.452 209.489 l
264.895 209.526 l
265.337 209.550 l
265.559 209.557 l
265.780 209.561 l
266.002 209.561 l
266.223 209.558 l
266.686 209.542 l
267.149 209.511 l
267.612 209.466 l
268.076 209.407 l
268.981 209.251 l
269.886 209.041 l
271.782 208.432 l
273.608 207.638 l
275.475 206.627 l
277.327 205.444 l
279.028 204.213 l
280.978 202.657 l
282.723 201.155 l
284.582 199.465 l
286.362 197.786 l
288.339 195.882 l
290.050 194.226 l
291.993 192.370 l
293.763 190.726 l
295.699 189.010 l
297.370 187.621 l
299.273 186.166 l
301.111 184.913 l
302.948 183.830 l
304.779 182.937 l
306.537 182.266 l
308.437 181.758 l
309.343 181.599 l
310.249 181.494 l
310.726 181.460 l
311.202 181.442 l
311.441 181.438 l
311.679 181.438 l
311.917 181.442 l
312.155 181.450 l
313.018 181.510 l
313.881 181.619 l
314.835 181.797 l
315.789 182.034 l
317.616 182.649 l
319.438 183.464 l
321.342 184.518 l
323.095 185.656 l
324.891 186.970 l
326.873 188.571 l
328.668 190.132 l
330.504 191.814 l
332.371 193.584 l
334.087 195.239 l
335.917 197.008 l
337.732 198.739 l
339.674 200.535 l
341.387 202.045 l
343.365 203.674 l
345.149 205.015 l
346.914 206.200 l
348.813 207.298 l
350.719 208.198 l
352.453 208.827 l
354.295 209.287 l
355.193 209.432 l
356.092 209.523 l
356.336 209.538 l
356.579 209.550 l
356.823 209.557 l
357.066 209.561 l
357.310 209.561 l
357.553 209.556 l
357.797 209.548 l
358.040 209.536 l
358.883 209.463 l
359.726 209.344 l
361.662 208.893 l
363.482 208.252 l
365.285 207.421 l
367.089 206.405 l
368.929 205.196 l
370.879 203.745 l
372.668 202.283 l
374.433 200.739 l
376.320 199.004 l
378.203 197.214 l
379.978 195.500 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
15.0000 195.500 m
379.978 195.500 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
282 221 13 15 rc
newpath
288.250 227.250 m
288.458 227.468 288.614 227.692 288.718 227.921  c
288.802 228.067 288.927 228.463 289.093 229.109  c
289.656 228.281 l
289.802 228.072 289.981 227.877 290.195 227.695  c
290.408 227.513 290.593 227.385 290.750 227.312  c
290.854 227.270 290.968 227.250 291.093 227.250  c
291.270 227.250 291.414 227.299 291.523 227.398  c
291.632 227.497 291.687 227.614 291.687 227.750  c
291.687 227.916 291.656 228.031 291.593 228.093  c
291.479 228.197 291.343 228.250 291.187 228.250  c
291.093 228.250 291.000 228.229 290.906 228.187  c
290.708 228.125 290.572 228.093 290.500 228.093  c
290.395 228.093 290.276 228.151 290.140 228.265  c
289.880 228.484 289.567 228.911 289.203 229.546  c
289.718 231.718 l
289.802 232.052 289.869 232.252 289.921 232.320  c
289.974 232.388 290.031 232.421 290.093 232.421  c
290.177 232.421 290.281 232.375 290.406 232.281  c
290.635 232.083 290.833 231.828 291.000 231.515  c
291.218 231.625 l
290.947 232.125 290.609 232.541 290.203 232.875  c
289.974 233.062 289.776 233.156 289.609 233.156  c
289.369 233.156 289.182 233.020 289.046 232.750  c
288.953 232.583 288.770 231.875 288.500 230.625  c
287.833 231.770 287.302 232.505 286.906 232.828  c
286.645 233.046 286.395 233.156 286.156 233.156  c
285.989 233.156 285.833 233.093 285.687 232.968  c
285.593 232.875 285.546 232.750 285.546 232.593  c
285.546 232.458 285.593 232.343 285.687 232.250  c
285.781 232.156 285.895 232.109 286.031 232.109  c
286.166 232.109 286.307 232.177 286.453 232.312  c
286.567 232.406 286.656 232.453 286.718 232.453  c
286.760 232.453 286.822 232.421 286.906 232.359  c
287.104 232.192 287.375 231.843 287.718 231.312  c
288.062 230.781 288.286 230.395 288.390 230.156  c
288.130 229.125 287.989 228.583 287.968 228.531  c
287.875 228.250 287.750 228.052 287.593 227.937  c
287.437 227.822 287.203 227.765 286.890 227.765  c
286.796 227.765 286.687 227.770 286.562 227.781  c
286.562 227.546 l
288.250 227.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
15.0000 195.500 m
15.0000 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 209 8 16 rc
newpath
18.4531 217.890 m
8.54687 217.890 l
8.54687 217.109 l
18.4531 217.109 l
18.4531 217.890 l
h
f
Q
newpath
22.9843 218.343 m
22.9843 219.375 l
21.6406 219.375 l
21.6406 222.000 l
20.4375 222.000 l
20.4375 219.375 l
16.2343 219.375 l
16.2343 218.437 l
20.8437 211.859 l
21.6406 211.859 l
21.6406 218.343 l
22.9843 218.343 l
h
20.4375 218.343 m
20.4375 213.406 l
16.9531 218.343 l
20.4375 218.343 l
h
f
newpath
f
newpath
33.9531 219.734 m
33.9531 220.026 33.9114 220.320 33.8281 220.617  c
33.7447 220.914 33.6302 221.184 33.4843 221.429  c
33.3385 221.674 33.1510 221.869 32.9218 222.015  c
32.6927 222.161 32.4375 222.234 32.1562 222.234  c
31.8750 222.234 31.6197 222.114 31.3906 221.875  c
31.1614 221.635 30.9739 221.276 30.8281 220.796  c
30.8072 220.724 30.7890 220.632 30.7734 220.523  c
30.7578 220.414 30.7447 220.299 30.7343 220.179  c
30.7239 220.059 30.7161 219.942 30.7109 219.828  c
30.7057 219.713 30.7031 219.619 30.7031 219.546  c
30.7031 218.974 30.7447 218.388 30.8281 217.789  c
30.9114 217.190 30.9791 216.588 31.0312 215.984  c
29.3281 215.984 l
29.2343 217.109 29.1354 218.054 29.0312 218.820  c
28.9270 219.585 28.8229 220.276 28.7187 220.890  c
28.6875 221.046 28.6562 221.195 28.6250 221.335  c
28.5937 221.476 28.5520 221.599 28.5000 221.703  c
28.3958 221.932 28.2630 222.085 28.1015 222.164  c
27.9401 222.242 27.7916 222.281 27.6562 222.281  c
27.4270 222.281 27.2369 222.200 27.0859 222.039  c
26.9349 221.877 26.8593 221.697 26.8593 221.500  c
26.8593 221.291 26.9140 221.117 27.0234 220.976  c
27.1328 220.835 27.2552 220.682 27.3906 220.515  c
27.5260 220.369 27.6510 220.213 27.7656 220.046  c
27.8802 219.880 27.9531 219.671 27.9843 219.421  c
28.4218 215.984 l
27.7031 215.984 l
27.5468 215.984 27.3750 216.023 27.1875 216.101  c
27.0000 216.179 26.8385 216.312 26.7031 216.500  c
26.4062 216.937 l
26.1562 216.937 l
26.3750 216.229 26.6484 215.677 26.9765 215.281  c
27.3046 214.885 27.7395 214.687 28.2812 214.687  c
33.8281 214.687 l
33.8281 215.984 l
31.9375 215.984 l
31.9062 216.276 31.8776 216.580 31.8515 216.898  c
31.8255 217.216 31.8072 217.533 31.7968 217.851  c
31.7864 218.169 31.7786 218.468 31.7734 218.750  c
31.7682 219.031 31.7656 219.270 31.7656 219.468  c
31.7656 219.635 31.7812 219.802 31.8125 219.968  c
31.8437 220.135 31.9010 220.283 31.9843 220.414  c
32.0677 220.544 32.1718 220.651 32.2968 220.734  c
32.4218 220.817 32.5729 220.859 32.7500 220.859  c
32.8645 220.859 32.9947 220.820 33.1406 220.742  c
33.2864 220.664 33.4062 220.531 33.5000 220.343  c
33.5416 220.270 33.5703 220.182 33.5859 220.078  c
33.6015 219.974 33.6145 219.859 33.6250 219.734  c
33.9531 219.734 l
33.9531 219.734 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
60.6223 195.500 m
60.6223 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
51 209 8 16 rc
newpath
63.4531 217.890 m
53.5468 217.890 l
53.5468 217.109 l
63.4531 217.109 l
63.4531 217.890 l
h
f
Q
newpath
61.7656 213.953 m
62.0468 213.286 62.4036 212.770 62.8359 212.406  c
63.2682 212.041 63.8072 211.859 64.4531 211.859  c
65.2447 211.859 65.8541 212.119 66.2812 212.640  c
66.6041 213.026 66.7656 213.437 66.7656 213.875  c
66.7656 214.604 66.3125 215.354 65.4062 216.125  c
66.0104 216.364 66.4687 216.705 66.7812 217.148  c
67.0937 217.591 67.2500 218.114 67.2500 218.718  c
67.2500 219.572 66.9791 220.312 66.4375 220.937  c
65.7187 221.760 64.6875 222.171 63.3437 222.171  c
62.6666 222.171 62.2083 222.088 61.9687 221.921  c
61.7291 221.755 61.6093 221.578 61.6093 221.390  c
61.6093 221.244 61.6666 221.119 61.7812 221.015  c
61.8958 220.911 62.0312 220.859 62.1875 220.859  c
62.3125 220.859 62.4375 220.880 62.5625 220.921  c
62.6458 220.942 62.8359 221.028 63.1328 221.179  c
63.4296 221.330 63.6302 221.421 63.7343 221.453  c
63.9218 221.505 64.1145 221.531 64.3125 221.531  c
64.8125 221.531 65.2474 221.338 65.6171 220.953  c
65.9869 220.567 66.1718 220.114 66.1718 219.593  c
66.1718 219.208 66.0885 218.833 65.9218 218.468  c
65.7864 218.187 65.6458 217.979 65.5000 217.843  c
65.2916 217.645 65.0026 217.468 64.6328 217.312  c
64.2630 217.156 63.8906 217.078 63.5156 217.078  c
63.2812 217.078 l
63.2812 216.843 l
63.6666 216.802 64.0520 216.666 64.4375 216.437  c
64.8229 216.208 65.1041 215.932 65.2812 215.609  c
65.4583 215.286 65.5468 214.932 65.5468 214.546  c
65.5468 214.046 65.3906 213.640 65.0781 213.328  c
64.7656 213.015 64.3750 212.859 63.9062 212.859  c
63.1458 212.859 62.5104 213.265 62.0000 214.078  c
61.7656 213.953 l
h
f
newpath
f
newpath
78.9531 219.734 m
78.9531 220.026 78.9114 220.320 78.8281 220.617  c
78.7447 220.914 78.6302 221.184 78.4843 221.429  c
78.3385 221.674 78.1510 221.869 77.9218 222.015  c
77.6927 222.161 77.4375 222.234 77.1562 222.234  c
76.8750 222.234 76.6197 222.114 76.3906 221.875  c
76.1614 221.635 75.9739 221.276 75.8281 220.796  c
75.8072 220.724 75.7890 220.632 75.7734 220.523  c
75.7578 220.414 75.7447 220.299 75.7343 220.179  c
75.7239 220.059 75.7161 219.942 75.7109 219.828  c
75.7057 219.713 75.7031 219.619 75.7031 219.546  c
75.7031 218.974 75.7447 218.388 75.8281 217.789  c
75.9114 217.190 75.9791 216.588 76.0312 215.984  c
74.3281 215.984 l
74.2343 217.109 74.1354 218.054 74.0312 218.820  c
73.9270 219.585 73.8229 220.276 73.7187 220.890  c
73.6875 221.046 73.6562 221.195 73.6250 221.335  c
73.5937 221.476 73.5520 221.599 73.5000 221.703  c
73.3958 221.932 73.2630 222.085 73.1015 222.164  c
72.9401 222.242 72.7916 222.281 72.6562 222.281  c
72.4270 222.281 72.2369 222.200 72.0859 222.039  c
71.9349 221.877 71.8593 221.697 71.8593 221.500  c
71.8593 221.291 71.9140 221.117 72.0234 220.976  c
72.1328 220.835 72.2552 220.682 72.3906 220.515  c
72.5260 220.369 72.6510 220.213 72.7656 220.046  c
72.8802 219.880 72.9531 219.671 72.9843 219.421  c
73.4218 215.984 l
72.7031 215.984 l
72.5468 215.984 72.3750 216.023 72.1875 216.101  c
72.0000 216.179 71.8385 216.312 71.7031 216.500  c
71.4062 216.937 l
71.1562 216.937 l
71.3750 216.229 71.6484 215.677 71.9765 215.281  c
72.3046 214.885 72.7395 214.687 73.2812 214.687  c
78.8281 214.687 l
78.8281 215.984 l
76.9375 215.984 l
76.9062 216.276 76.8776 216.580 76.8515 216.898  c
76.8255 217.216 76.8072 217.533 76.7968 217.851  c
76.7864 218.169 76.7786 218.468 76.7734 218.750  c
76.7682 219.031 76.7656 219.270 76.7656 219.468  c
76.7656 219.635 76.7812 219.802 76.8125 219.968  c
76.8437 220.135 76.9010 220.283 76.9843 220.414  c
77.0677 220.544 77.1718 220.651 77.2968 220.734  c
77.4218 220.817 77.5729 220.859 77.7500 220.859  c
77.8645 220.859 77.9947 220.820 78.1406 220.742  c
78.2864 220.664 78.4062 220.531 78.5000 220.343  c
78.5416 220.270 78.5703 220.182 78.5859 220.078  c
78.6015 219.974 78.6145 219.859 78.6250 219.734  c
78.9531 219.734 l
78.9531 219.734 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
106.244 195.500 m
106.244 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
97 209 8 16 rc
newpath
109.453 217.890 m
99.5468 217.890 l
99.5468 217.109 l
109.453 217.109 l
109.453 217.890 l
h
f
Q
newpath
113.875 220.093 m
113.187 222.000 l
107.328 222.000 l
107.328 221.734 l
109.046 220.161 110.257 218.875 110.960 217.875  c
111.664 216.875 112.015 215.963 112.015 215.140  c
112.015 214.515 111.822 214.000 111.437 213.593  c
111.052 213.187 110.588 212.984 110.046 212.984  c
109.567 212.984 109.132 213.127 108.742 213.414  c
108.351 213.700 108.062 214.119 107.875 214.671  c
107.609 214.671 l
107.734 213.765 108.049 213.070 108.554 212.585  c
109.059 212.101 109.687 211.859 110.437 211.859  c
111.250 211.859 111.924 212.119 112.460 212.640  c
112.997 213.161 113.265 213.770 113.265 214.468  c
113.265 214.968 113.151 215.474 112.921 215.984  c
112.557 216.776 111.968 217.609 111.156 218.484  c
109.947 219.817 109.187 220.619 108.875 220.890  c
111.468 220.890 l
112.000 220.890 112.372 220.872 112.585 220.835  c
112.799 220.799 112.992 220.721 113.164 220.601  c
113.335 220.481 113.484 220.312 113.609 220.093  c
113.875 220.093 l
h
f
newpath
f
newpath
124.953 219.734 m
124.953 220.026 124.911 220.320 124.828 220.617  c
124.744 220.914 124.630 221.184 124.484 221.429  c
124.338 221.674 124.151 221.869 123.921 222.015  c
123.692 222.161 123.437 222.234 123.156 222.234  c
122.875 222.234 122.619 222.114 122.390 221.875  c
122.161 221.635 121.974 221.276 121.828 220.796  c
121.807 220.724 121.789 220.632 121.773 220.523  c
121.757 220.414 121.744 220.299 121.734 220.179  c
121.724 220.059 121.716 219.942 121.710 219.828  c
121.705 219.713 121.703 219.619 121.703 219.546  c
121.703 218.974 121.744 218.388 121.828 217.789  c
121.911 217.190 121.979 216.588 122.031 215.984  c
120.328 215.984 l
120.234 217.109 120.135 218.054 120.031 218.820  c
119.927 219.585 119.822 220.276 119.718 220.890  c
119.687 221.046 119.656 221.195 119.625 221.335  c
119.593 221.476 119.552 221.599 119.500 221.703  c
119.395 221.932 119.263 222.085 119.101 222.164  c
118.940 222.242 118.791 222.281 118.656 222.281  c
118.427 222.281 118.237 222.200 118.085 222.039  c
117.934 221.877 117.859 221.697 117.859 221.500  c
117.859 221.291 117.914 221.117 118.023 220.976  c
118.132 220.835 118.255 220.682 118.390 220.515  c
118.526 220.369 118.651 220.213 118.765 220.046  c
118.880 219.880 118.953 219.671 118.984 219.421  c
119.421 215.984 l
118.703 215.984 l
118.546 215.984 118.375 216.023 118.187 216.101  c
118.000 216.179 117.838 216.312 117.703 216.500  c
117.406 216.937 l
117.156 216.937 l
117.375 216.229 117.648 215.677 117.976 215.281  c
118.304 214.885 118.739 214.687 119.281 214.687  c
124.828 214.687 l
124.828 215.984 l
122.937 215.984 l
122.906 216.276 122.877 216.580 122.851 216.898  c
122.825 217.216 122.807 217.533 122.796 217.851  c
122.786 218.169 122.778 218.468 122.773 218.750  c
122.768 219.031 122.765 219.270 122.765 219.468  c
122.765 219.635 122.781 219.802 122.812 219.968  c
122.843 220.135 122.901 220.283 122.984 220.414  c
123.067 220.544 123.171 220.651 123.296 220.734  c
123.421 220.817 123.572 220.859 123.750 220.859  c
123.864 220.859 123.994 220.820 124.140 220.742  c
124.286 220.664 124.406 220.531 124.500 220.343  c
124.541 220.270 124.570 220.182 124.585 220.078  c
124.601 219.974 124.614 219.859 124.625 219.734  c
124.953 219.734 l
124.953 219.734 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
151.867 195.500 m
151.867 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
147 209 8 16 rc
newpath
159.453 217.890 m
149.546 217.890 l
149.546 217.109 l
159.453 217.109 l
159.453 217.890 l
h
f
Q
newpath
164.953 219.734 m
164.953 220.026 164.911 220.320 164.828 220.617  c
164.744 220.914 164.630 221.184 164.484 221.429  c
164.338 221.674 164.151 221.869 163.921 222.015  c
163.692 222.161 163.437 222.234 163.156 222.234  c
162.875 222.234 162.619 222.114 162.390 221.875  c
162.161 221.635 161.974 221.276 161.828 220.796  c
161.807 220.724 161.789 220.632 161.773 220.523  c
161.757 220.414 161.744 220.299 161.734 220.179  c
161.724 220.059 161.716 219.942 161.710 219.828  c
161.705 219.713 161.703 219.619 161.703 219.546  c
161.703 218.974 161.744 218.388 161.828 217.789  c
161.911 217.190 161.979 216.588 162.031 215.984  c
160.328 215.984 l
160.234 217.109 160.135 218.054 160.031 218.820  c
159.927 219.585 159.822 220.276 159.718 220.890  c
159.687 221.046 159.656 221.195 159.625 221.335  c
159.593 221.476 159.552 221.599 159.500 221.703  c
159.395 221.932 159.263 222.085 159.101 222.164  c
158.940 222.242 158.791 222.281 158.656 222.281  c
158.427 222.281 158.237 222.200 158.085 222.039  c
157.934 221.877 157.859 221.697 157.859 221.500  c
157.859 221.291 157.914 221.117 158.023 220.976  c
158.132 220.835 158.255 220.682 158.390 220.515  c
158.526 220.369 158.651 220.213 158.765 220.046  c
158.880 219.880 158.953 219.671 158.984 219.421  c
159.421 215.984 l
158.703 215.984 l
158.546 215.984 158.375 216.023 158.187 216.101  c
158.000 216.179 157.838 216.312 157.703 216.500  c
157.406 216.937 l
157.156 216.937 l
157.375 216.229 157.648 215.677 157.976 215.281  c
158.304 214.885 158.739 214.687 159.281 214.687  c
164.828 214.687 l
164.828 215.984 l
162.937 215.984 l
162.906 216.276 162.877 216.580 162.851 216.898  c
162.825 217.216 162.807 217.533 162.796 217.851  c
162.786 218.169 162.778 218.468 162.773 218.750  c
162.768 219.031 162.765 219.270 162.765 219.468  c
162.765 219.635 162.781 219.802 162.812 219.968  c
162.843 220.135 162.901 220.283 162.984 220.414  c
163.067 220.544 163.171 220.651 163.296 220.734  c
163.421 220.817 163.572 220.859 163.750 220.859  c
163.864 220.859 163.994 220.820 164.140 220.742  c
164.286 220.664 164.406 220.531 164.500 220.343  c
164.541 220.270 164.570 220.182 164.585 220.078  c
164.601 219.974 164.614 219.859 164.625 219.734  c
164.953 219.734 l
164.953 219.734 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 195.500 m
197.489 199.500 l
S
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
243.111 195.500 m
243.111 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
251.953 219.734 m
251.953 220.026 251.911 220.320 251.828 220.617  c
251.744 220.914 251.630 221.184 251.484 221.429  c
251.338 221.674 251.151 221.869 250.921 222.015  c
250.692 222.161 250.437 222.234 250.156 222.234  c
249.875 222.234 249.619 222.114 249.390 221.875  c
249.161 221.635 248.974 221.276 248.828 220.796  c
248.807 220.724 248.789 220.632 248.773 220.523  c
248.757 220.414 248.744 220.299 248.734 220.179  c
248.724 220.059 248.716 219.942 248.710 219.828  c
248.705 219.713 248.703 219.619 248.703 219.546  c
248.703 218.974 248.744 218.388 248.828 217.789  c
248.911 217.190 248.979 216.588 249.031 215.984  c
247.328 215.984 l
247.234 217.109 247.135 218.054 247.031 218.820  c
246.927 219.585 246.822 220.276 246.718 220.890  c
246.687 221.046 246.656 221.195 246.625 221.335  c
246.593 221.476 246.552 221.599 246.500 221.703  c
246.395 221.932 246.263 222.085 246.101 222.164  c
245.940 222.242 245.791 222.281 245.656 222.281  c
245.427 222.281 245.237 222.200 245.085 222.039  c
244.934 221.877 244.859 221.697 244.859 221.500  c
244.859 221.291 244.914 221.117 245.023 220.976  c
245.132 220.835 245.255 220.682 245.390 220.515  c
245.526 220.369 245.651 220.213 245.765 220.046  c
245.880 219.880 245.953 219.671 245.984 219.421  c
246.421 215.984 l
245.703 215.984 l
245.546 215.984 245.375 216.023 245.187 216.101  c
245.000 216.179 244.838 216.312 244.703 216.500  c
244.406 216.937 l
244.156 216.937 l
244.375 216.229 244.648 215.677 244.976 215.281  c
245.304 214.885 245.739 214.687 246.281 214.687  c
251.828 214.687 l
251.828 215.984 l
249.937 215.984 l
249.906 216.276 249.877 216.580 249.851 216.898  c
249.825 217.216 249.807 217.533 249.796 217.851  c
249.786 218.169 249.778 218.468 249.773 218.750  c
249.768 219.031 249.765 219.270 249.765 219.468  c
249.765 219.635 249.781 219.802 249.812 219.968  c
249.843 220.135 249.901 220.283 249.984 220.414  c
250.067 220.544 250.171 220.651 250.296 220.734  c
250.421 220.817 250.572 220.859 250.750 220.859  c
250.864 220.859 250.994 220.820 251.140 220.742  c
251.286 220.664 251.406 220.531 251.500 220.343  c
251.541 220.270 251.570 220.182 251.585 220.078  c
251.601 219.974 251.614 219.859 251.625 219.734  c
251.953 219.734 l
251.953 219.734 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
288.733 195.500 m
288.733 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
290.875 220.093 m
290.187 222.000 l
284.328 222.000 l
284.328 221.734 l
286.046 220.161 287.257 218.875 287.960 217.875  c
288.664 216.875 289.015 215.963 289.015 215.140  c
289.015 214.515 288.822 214.000 288.437 213.593  c
288.052 213.187 287.588 212.984 287.046 212.984  c
286.567 212.984 286.132 213.127 285.742 213.414  c
285.351 213.700 285.062 214.119 284.875 214.671  c
284.609 214.671 l
284.734 213.765 285.049 213.070 285.554 212.585  c
286.059 212.101 286.687 211.859 287.437 211.859  c
288.250 211.859 288.924 212.119 289.460 212.640  c
289.997 213.161 290.265 213.770 290.265 214.468  c
290.265 214.968 290.151 215.474 289.921 215.984  c
289.557 216.776 288.968 217.609 288.156 218.484  c
286.947 219.817 286.187 220.619 285.875 220.890  c
288.468 220.890 l
289.000 220.890 289.372 220.872 289.585 220.835  c
289.799 220.799 289.992 220.721 290.164 220.601  c
290.335 220.481 290.484 220.312 290.609 220.093  c
290.875 220.093 l
h
f
newpath
f
newpath
301.953 219.734 m
301.953 220.026 301.911 220.320 301.828 220.617  c
301.744 220.914 301.630 221.184 301.484 221.429  c
301.338 221.674 301.151 221.869 300.921 222.015  c
300.692 222.161 300.437 222.234 300.156 222.234  c
299.875 222.234 299.619 222.114 299.390 221.875  c
299.161 221.635 298.974 221.276 298.828 220.796  c
298.807 220.724 298.789 220.632 298.773 220.523  c
298.757 220.414 298.744 220.299 298.734 220.179  c
298.724 220.059 298.716 219.942 298.710 219.828  c
298.705 219.713 298.703 219.619 298.703 219.546  c
298.703 218.974 298.744 218.388 298.828 217.789  c
298.911 217.190 298.979 216.588 299.031 215.984  c
297.328 215.984 l
297.234 217.109 297.135 218.054 297.031 218.820  c
296.927 219.585 296.822 220.276 296.718 220.890  c
296.687 221.046 296.656 221.195 296.625 221.335  c
296.593 221.476 296.552 221.599 296.500 221.703  c
296.395 221.932 296.263 222.085 296.101 222.164  c
295.940 222.242 295.791 222.281 295.656 222.281  c
295.427 222.281 295.237 222.200 295.085 222.039  c
294.934 221.877 294.859 221.697 294.859 221.500  c
294.859 221.291 294.914 221.117 295.023 220.976  c
295.132 220.835 295.255 220.682 295.390 220.515  c
295.526 220.369 295.651 220.213 295.765 220.046  c
295.880 219.880 295.953 219.671 295.984 219.421  c
296.421 215.984 l
295.703 215.984 l
295.546 215.984 295.375 216.023 295.187 216.101  c
295.000 216.179 294.838 216.312 294.703 216.500  c
294.406 216.937 l
294.156 216.937 l
294.375 216.229 294.648 215.677 294.976 215.281  c
295.304 214.885 295.739 214.687 296.281 214.687  c
301.828 214.687 l
301.828 215.984 l
299.937 215.984 l
299.906 216.276 299.877 216.580 299.851 216.898  c
299.825 217.216 299.807 217.533 299.796 217.851  c
299.786 218.169 299.778 218.468 299.773 218.750  c
299.768 219.031 299.765 219.270 299.765 219.468  c
299.765 219.635 299.781 219.802 299.812 219.968  c
299.843 220.135 299.901 220.283 299.984 220.414  c
300.067 220.544 300.171 220.651 300.296 220.734  c
300.421 220.817 300.572 220.859 300.750 220.859  c
300.864 220.859 300.994 220.820 301.140 220.742  c
301.286 220.664 301.406 220.531 301.500 220.343  c
301.541 220.270 301.570 220.182 301.585 220.078  c
301.601 219.974 301.614 219.859 301.625 219.734  c
301.953 219.734 l
301.953 219.734 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
334.356 195.500 m
334.356 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
330.765 213.953 m
331.046 213.286 331.403 212.770 331.835 212.406  c
332.268 212.041 332.807 211.859 333.453 211.859  c
334.244 211.859 334.854 212.119 335.281 212.640  c
335.604 213.026 335.765 213.437 335.765 213.875  c
335.765 214.604 335.312 215.354 334.406 216.125  c
335.010 216.364 335.468 216.705 335.781 217.148  c
336.093 217.591 336.250 218.114 336.250 218.718  c
336.250 219.572 335.979 220.312 335.437 220.937  c
334.718 221.760 333.687 222.171 332.343 222.171  c
331.666 222.171 331.208 222.088 330.968 221.921  c
330.729 221.755 330.609 221.578 330.609 221.390  c
330.609 221.244 330.666 221.119 330.781 221.015  c
330.895 220.911 331.031 220.859 331.187 220.859  c
331.312 220.859 331.437 220.880 331.562 220.921  c
331.645 220.942 331.835 221.028 332.132 221.179  c
332.429 221.330 332.630 221.421 332.734 221.453  c
332.921 221.505 333.114 221.531 333.312 221.531  c
333.812 221.531 334.247 221.338 334.617 220.953  c
334.987 220.567 335.171 220.114 335.171 219.593  c
335.171 219.208 335.088 218.833 334.921 218.468  c
334.786 218.187 334.645 217.979 334.500 217.843  c
334.291 217.645 334.002 217.468 333.632 217.312  c
333.263 217.156 332.890 217.078 332.515 217.078  c
332.281 217.078 l
332.281 216.843 l
332.666 216.802 333.052 216.666 333.437 216.437  c
333.822 216.208 334.104 215.932 334.281 215.609  c
334.458 215.286 334.546 214.932 334.546 214.546  c
334.546 214.046 334.390 213.640 334.078 213.328  c
333.765 213.015 333.375 212.859 332.906 212.859  c
332.145 212.859 331.510 213.265 331.000 214.078  c
330.765 213.953 l
h
f
newpath
f
newpath
347.953 219.734 m
347.953 220.026 347.911 220.320 347.828 220.617  c
347.744 220.914 347.630 221.184 347.484 221.429  c
347.338 221.674 347.151 221.869 346.921 222.015  c
346.692 222.161 346.437 222.234 346.156 222.234  c
345.875 222.234 345.619 222.114 345.390 221.875  c
345.161 221.635 344.974 221.276 344.828 220.796  c
344.807 220.724 344.789 220.632 344.773 220.523  c
344.757 220.414 344.744 220.299 344.734 220.179  c
344.724 220.059 344.716 219.942 344.710 219.828  c
344.705 219.713 344.703 219.619 344.703 219.546  c
344.703 218.974 344.744 218.388 344.828 217.789  c
344.911 217.190 344.979 216.588 345.031 215.984  c
343.328 215.984 l
343.234 217.109 343.135 218.054 343.031 218.820  c
342.927 219.585 342.822 220.276 342.718 220.890  c
342.687 221.046 342.656 221.195 342.625 221.335  c
342.593 221.476 342.552 221.599 342.500 221.703  c
342.395 221.932 342.263 222.085 342.101 222.164  c
341.940 222.242 341.791 222.281 341.656 222.281  c
341.427 222.281 341.237 222.200 341.085 222.039  c
340.934 221.877 340.859 221.697 340.859 221.500  c
340.859 221.291 340.914 221.117 341.023 220.976  c
341.132 220.835 341.255 220.682 341.390 220.515  c
341.526 220.369 341.651 220.213 341.765 220.046  c
341.880 219.880 341.953 219.671 341.984 219.421  c
342.421 215.984 l
341.703 215.984 l
341.546 215.984 341.375 216.023 341.187 216.101  c
341.000 216.179 340.838 216.312 340.703 216.500  c
340.406 216.937 l
340.156 216.937 l
340.375 216.229 340.648 215.677 340.976 215.281  c
341.304 214.885 341.739 214.687 342.281 214.687  c
347.828 214.687 l
347.828 215.984 l
345.937 215.984 l
345.906 216.276 345.877 216.580 345.851 216.898  c
345.825 217.216 345.807 217.533 345.796 217.851  c
345.786 218.169 345.778 218.468 345.773 218.750  c
345.768 219.031 345.765 219.270 345.765 219.468  c
345.765 219.635 345.781 219.802 345.812 219.968  c
345.843 220.135 345.901 220.283 345.984 220.414  c
346.067 220.544 346.171 220.651 346.296 220.734  c
346.421 220.817 346.572 220.859 346.750 220.859  c
346.864 220.859 346.994 220.820 347.140 220.742  c
347.286 220.664 347.406 220.531 347.500 220.343  c
347.541 220.270 347.570 220.182 347.585 220.078  c
347.601 219.974 347.614 219.859 347.625 219.734  c
347.953 219.734 l
347.953 219.734 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
379.978 195.500 m
379.978 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
381.984 218.343 m
381.984 219.375 l
380.640 219.375 l
380.640 222.000 l
379.437 222.000 l
379.437 219.375 l
375.234 219.375 l
375.234 218.437 l
379.843 211.859 l
380.640 211.859 l
380.640 218.343 l
381.984 218.343 l
h
379.437 218.343 m
379.437 213.406 l
375.953 218.343 l
379.437 218.343 l
h
f
newpath
f
newpath
392.953 219.734 m
392.953 220.026 392.911 220.320 392.828 220.617  c
392.744 220.914 392.630 221.184 392.484 221.429  c
392.338 221.674 392.151 221.869 391.921 222.015  c
391.692 222.161 391.437 222.234 391.156 222.234  c
390.875 222.234 390.619 222.114 390.390 221.875  c
390.161 221.635 389.974 221.276 389.828 220.796  c
389.807 220.724 389.789 220.632 389.773 220.523  c
389.757 220.414 389.744 220.299 389.734 220.179  c
389.724 220.059 389.716 219.942 389.710 219.828  c
389.705 219.713 389.703 219.619 389.703 219.546  c
389.703 218.974 389.744 218.388 389.828 217.789  c
389.911 217.190 389.979 216.588 390.031 215.984  c
388.328 215.984 l
388.234 217.109 388.135 218.054 388.031 218.820  c
387.927 219.585 387.822 220.276 387.718 220.890  c
387.687 221.046 387.656 221.195 387.625 221.335  c
387.593 221.476 387.552 221.599 387.500 221.703  c
387.395 221.932 387.263 222.085 387.101 222.164  c
386.940 222.242 386.791 222.281 386.656 222.281  c
386.427 222.281 386.237 222.200 386.085 222.039  c
385.934 221.877 385.859 221.697 385.859 221.500  c
385.859 221.291 385.914 221.117 386.023 220.976  c
386.132 220.835 386.255 220.682 386.390 220.515  c
386.526 220.369 386.651 220.213 386.765 220.046  c
386.880 219.880 386.953 219.671 386.984 219.421  c
387.421 215.984 l
386.703 215.984 l
386.546 215.984 386.375 216.023 386.187 216.101  c
386.000 216.179 385.838 216.312 385.703 216.500  c
385.406 216.937 l
385.156 216.937 l
385.375 216.229 385.648 215.677 385.976 215.281  c
386.304 214.885 386.739 214.687 387.281 214.687  c
392.828 214.687 l
392.828 215.984 l
390.937 215.984 l
390.906 216.276 390.877 216.580 390.851 216.898  c
390.825 217.216 390.807 217.533 390.796 217.851  c
390.786 218.169 390.778 218.468 390.773 218.750  c
390.768 219.031 390.765 219.270 390.765 219.468  c
390.765 219.635 390.781 219.802 390.812 219.968  c
390.843 220.135 390.901 220.283 390.984 220.414  c
391.067 220.544 391.171 220.651 391.296 220.734  c
391.421 220.817 391.572 220.859 391.750 220.859  c
391.864 220.859 391.994 220.820 392.140 220.742  c
392.286 220.664 392.406 220.531 392.500 220.343  c
392.541 220.270 392.570 220.182 392.585 220.078  c
392.601 219.974 392.614 219.859 392.625 219.734  c
392.953 219.734 l
392.953 219.734 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
26.4055 195.500 m
26.4055 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
37.8111 195.500 m
37.8111 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
49.2167 195.500 m
49.2167 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
72.0279 195.500 m
72.0279 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
83.4334 195.500 m
83.4334 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
94.8390 195.500 m
94.8390 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
117.650 195.500 m
117.650 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
129.055 195.500 m
129.055 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
140.461 195.500 m
140.461 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
163.272 195.500 m
163.272 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
174.678 195.500 m
174.678 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
186.083 195.500 m
186.083 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
208.894 195.500 m
208.894 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
220.300 195.500 m
220.300 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
231.706 195.500 m
231.706 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
254.517 195.500 m
254.517 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
265.922 195.500 m
265.922 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
277.328 195.500 m
277.328 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
300.139 195.500 m
300.139 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
311.545 195.500 m
311.545 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
322.950 195.500 m
322.950 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
345.761 195.500 m
345.761 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
357.167 195.500 m
357.167 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
368.573 195.500 m
368.573 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
Q
2 J
0 j
q
0 J
1 j
newpath
197.489 209.561 m
197.489 181.438 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
150 181 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 209.561 m
193.489 209.561 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
178 207 8 16 rc
newpath
190.453 215.890 m
180.546 215.890 l
180.546 215.109 l
190.453 215.109 l
190.453 215.890 l
h
f
Q
newpath
189.765 211.046 m
192.171 209.859 l
192.421 209.859 l
192.421 218.250 l
192.421 218.802 192.445 219.148 192.492 219.289  c
192.539 219.429 192.635 219.536 192.781 219.609  c
192.927 219.682 193.224 219.724 193.671 219.734  c
193.671 220.000 l
189.937 220.000 l
189.937 219.734 l
190.406 219.724 190.708 219.682 190.843 219.609  c
190.979 219.536 191.072 219.440 191.125 219.320  c
191.177 219.200 191.203 218.843 191.203 218.250  c
191.203 212.890 l
191.203 212.161 191.182 211.697 191.140 211.500  c
191.099 211.343 191.033 211.229 190.945 211.156  c
190.856 211.083 190.750 211.046 190.625 211.046  c
190.437 211.046 190.187 211.119 189.875 211.265  c
189.765 211.046 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 202.530 m
193.489 202.530 l
S
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 195.500 m
193.489 195.500 l
S
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 188.469 m
193.489 188.469 l
S
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 181.438 m
193.489 181.438 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
189.765 183.046 m
192.171 181.859 l
192.421 181.859 l
192.421 190.250 l
192.421 190.802 192.445 191.148 192.492 191.289  c
192.539 191.429 192.635 191.536 192.781 191.609  c
192.927 191.682 193.224 191.724 193.671 191.734  c
193.671 192.000 l
189.937 192.000 l
189.937 191.734 l
190.406 191.724 190.708 191.682 190.843 191.609  c
190.979 191.536 191.072 191.440 191.125 191.320  c
191.177 191.200 191.203 190.843 191.203 190.250  c
191.203 184.890 l
191.203 184.161 191.182 183.697 191.140 183.500  c
191.099 183.343 191.033 183.229 190.945 183.156  c
190.856 183.083 190.750 183.046 190.625 183.046  c
190.437 183.046 190.187 183.119 189.875 183.265  c
189.765 183.046 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 208.155 m
195.489 208.155 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 206.749 m
195.489 206.749 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 205.343 m
195.489 205.343 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 203.937 m
195.489 203.937 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 201.124 m
195.489 201.124 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 199.718 m
195.489 199.718 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 198.312 m
195.489 198.312 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 196.906 m
195.489 196.906 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 194.093 m
195.489 194.093 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 192.687 m
195.489 192.687 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 191.281 m
195.489 191.281 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 189.875 m
195.489 189.875 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 187.062 m
195.489 187.062 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 185.656 m
195.489 185.656 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 184.250 m
195.489 184.250 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
197.489 182.844 m
195.489 182.844 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
